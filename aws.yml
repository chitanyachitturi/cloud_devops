Resources:
  MyEC2InstanceProfile:
    Type: AWS::EC2::Instance
    Properties:
      AdditionalInfo: EC2 instance to deploy covid form application
      AvailabilityZone: us-east-1a
      IamInstanceProfile: "covidformIAM"
      SecurityGroupIds: 
        - sg-09595431f32fcc7b9 
      ImageId: ami-0fec9863172e50c93
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: t2.micro
      KeyName: cloud_devops
      SourceDestCheck: true

  MyEBSProfile:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: cloud-devops
      CNAMEPrefix: covid-app
      Description: EBS to deploy covid analysis web app
      EnvironmentName: cloud-devops-covid-app
      OperationsRole: 
        Fn::GetAtt: 
          - RootRole
          - Arn
      SolutionStackName: 64bit Amazon Linux 2023 v4.0.5 running Python 3.11
      Tier: 
        Name: WebServer
        Type: Standard
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: 
            Fn::GetAtt:
            - MyIAMInstanceProfile
            - Arn

  MyDocDBProfile:
    Type: AWS::DocDB::DBCluster
    Properties:
      AvailabilityZones: 
        - us-east-1a
      BackupRetentionPeriod: 1
      DBClusterIdentifier: covid-data
      EnableCloudwatchLogsExports: 
        - audit
      MasterUsername: chaitanya
      MasterUserPassword: 91365335
      UseLatestRestorableTime: true
 
  MyS3Profile:
    Type: AWS::S3::Bucket
    Properties:
      #AccelerateConfiguration: AccelerateConfiguration
      AccessControl: BucketOwnerFullControl
      BucketName: naa-jivitam
      #IntelligentTieringConfigurations: []
      #InventoryConfigurations: []
      LifecycleConfiguration:
        Rules:
        - Status: Enabled
          Transition: 
            StorageClass: GLACIER
            TransitionInDays: 25
      LoggingConfiguration: 
        DestinationBucketName: naa-jivitam
        LogFilePrefix: my-s3-logs/
      MetricsConfigurations: 
        - Id: MyMetricsConfiguration
          Prefix: MetricLogs/
      OwnershipControls: 
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      VersioningConfiguration: 
        Status: Enabled
      WebsiteConfiguration: 
        IndexDocument: index.html

  MyCodePipelineProfile:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore: 
        #GitHubToken: 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
        Type: S3
        Location: 
          Ref: MyS3Profile
 #       DisableInboundStageTransitions: 
 #         - StageTransition
      Name: cloud-devops-pipeline
      RestartExecutionOnUpdate: true
      RoleArn: 
        Fn::GetAtt: 
          - RootRole
          - Arn 
      Stages: 
      - Name: Source
        Actions:
          - Name: GitHubSourceAction
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: 1
            Configuration:
              Owner: chitanyachitturi
              Repo: cloud_devops
              Branch: main
              OAuthToken: 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
            OutputArtifacts:
                - Name: SourceOutput

      - Name: BuildAndTest
        Actions:
          - Name: CodeBuildAction
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            Configuration:
              ProjectName: Cloud-DevopsProjectBuild
            InputArtifacts:
              - Name: SourceOutput
            OutputArtifacts:
              - Name: BuildAndTestOutput

      - Name: DeployToEC2
        Actions:
          - Name: EC2InstanceDeployment
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CodeDeploy
              Version: 1
            Configuration:
              ApplicationName: MyCodeDeployApp
              DeploymentGroupName: MyDeploymentGroup
            InputArtifacts:
              - Name: BuildAndTestOutput

  MyIAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: covidformIAM
      Path: "/"
      Roles: 
        - Ref: RootRole
    
  RootRole:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
                  - elasticbeanstalk.amazonaws.com
                  - codepipeline.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: '*'
                  Resource: '*'
        ManagedPolicyArns: 
          - arn:aws:iam::aws:policy/AdministratorAccess